import { useState, useEffect } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import BubbleAnimation from '@/components/BubbleAnimation';
import { useSoundEffects } from '@/hooks/useSoundEffects';

interface Microbe {
  id: number;
  name: string;
  scientificName: string;
  age: string;
  occupation: string;
  about: string;
  hobby: string;
  hates: string;
  products: string;
  temperature: string;
  energy: string;
  status: string;
  emoji: string;
  gradient: string;
  animation: string;
}

const microbes: Microbe[] = [
  {
    id: 1,
    name: '–°–∞—à–∞ –†–æ–º–Ω—ã–µ',
    scientificName: 'Saccharomyces',
    age: '15 –º–ª–Ω –ª–µ—Ç',
    occupation: '–ê–ª–∫–æ–≥–æ–ª—å–Ω—ã–π –∏–Ω–∂–µ–Ω–µ—Ä',
    about: '–ì–ª—é–∫–æ–∑—É –¥–ª—è –∞–Ω–∞—ç—Ä–æ–±–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π',
    hobby: '–ü—Ä–µ–≤—Ä–∞—â–∞—Ç—å —Å–∞—Ö–∞—Ä –≤ —ç—Ç–∞–Ω–æ–ª, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å CO‚ÇÇ',
    hates: '–ö–∏—Å–ª–æ—Ä–æ–¥, –∞–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫–∏, –≤—ã—Å–æ–∫–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã',
    products: '–°–ø–∏—Ä—Ç, —É–≥–ª–µ–∫–∏—Å–ª—ã–π –≥–∞–∑',
    temperature: '25-30¬∞C',
    energy: '2 ATP —Å –º–æ–ª–µ–∫—É–ª—ã –≥–ª—é–∫–æ–∑—ã',
    status: '–ì–æ—Ç–æ–≤ –∫ –±—Ä–æ–∂–µ–Ω–∏—é! üç∑',
    emoji: 'üç∑',
    gradient: 'gradient-purple',
    animation: 'animate-pulse-glow'
  },
  {
    id: 2,
    name: '–õ–∞–∫—Ç–∞ Acidophilus',
    scientificName: 'Lactobacillus',
    age: '2 –º–ª–Ω –ª–µ—Ç',
    occupation: '–ú–æ–ª–æ—á–Ω—ã–π —Å–æ–º–µ–ª—å–µ',
    about: '–õ–∞–∫—Ç–æ–∑—É –¥–ª—è –∫–∏—Å–ª—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π',
    hobby: '–°–∫–≤–∞—à–∏–≤–∞—Ç—å –º–æ–ª–æ–∫–æ, —Å–æ–∑–¥–∞–≤–∞—Ç—å –π–æ–≥—É—Ä—Ç—ã',
    hates: '–ê–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏, —â–µ–ª–æ—á–Ω—É—é —Å—Ä–µ–¥—É',
    products: '–ú–æ–ª–æ—á–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞',
    temperature: '37-40¬∞C',
    energy: '2 ATP —Å –º–æ–ª–µ–∫—É–ª—ã –≥–ª—é–∫–æ–∑—ã',
    status: '–ò—â—É –º–æ–ª–æ–∫–æ –¥–ª—è –≤–µ—á–Ω–æ–π –¥—Ä—É–∂–±—ã! ü•õ',
    emoji: 'ü•õ',
    gradient: 'gradient-blue',
    animation: 'animate-float'
  },
  {
    id: 3,
    name: '–ü—Ä–æ–ø–∏–æ–Ω –ü—Ä–æ–ø–∏–æ–Ω–æ–≤—ã–µ',
    scientificName: 'Propionibacterium',
    age: '1.5 –º–ª–Ω –ª–µ—Ç',
    occupation: '–°—ã—Ä–Ω—ã–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä',
    about: '–õ–∞–∫—Ç–∞—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥—ã—Ä–æ–∫',
    hobby: '–°–æ–∑–¥–∞–≤–∞—Ç—å CO‚ÇÇ –¥–ª—è –¥—ã—Ä–æ–∫ –≤ —Å—ã—Ä–µ',
    hates: '–ù–∏–∑–∫–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—é',
    products: '–ü—Ä–æ–ø–∏–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞, —É–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞, CO‚ÇÇ',
    temperature: '30-37¬∞C',
    energy: '–ú–µ–Ω—å—à–µ 2 ATP',
    status: '–ò—â—É –ª–∞–∫—Ç–∞—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω—ã—Ö –¥—ã—Ä–æ–∫! üßÄ',
    emoji: 'üßÄ',
    gradient: 'gradient-orange',
    animation: 'animate-pulse-glow'
  },
  {
    id: 4,
    name: '–ê—Ü–µ—Ç –£–∫—Å—É—Å–Ω–æ–∫–∏—Å–ª—ã–π',
    scientificName: 'Acetobacter',
    age: '3 –º–ª–Ω –ª–µ—Ç',
    occupation: '–ö–∏—Å–ª–æ—Ç–Ω—ã–π –º–∞—Å—Ç–µ—Ä',
    about: '–≠—Ç–∞–Ω–æ–ª –¥–ª—è –æ–∫–∏—Å–ª–µ–Ω–∏—è',
    hobby: '–ü—Ä–µ–≤—Ä–∞—â–∞—Ç—å –∞–ª–∫–æ–≥–æ–ª—å –≤ —É–∫—Å—É—Å',
    hates: '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–∏—Å–ª–æ—Ä–æ–¥–∞, –Ω–∏–∑–∫–∏–π pH',
    products: '–£–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞',
    temperature: '25-30¬∞C',
    energy: '2 ATP —Å –º–æ–ª–µ–∫—É–ª—ã —ç—Ç–∞–Ω–æ–ª–∞',
    status: '–ò—â—É —ç—Ç–∞–Ω–æ–ª –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–∫—Å—É—Å–∞! üç∂',
    emoji: 'üç∂',
    gradient: 'gradient-pink',
    animation: 'animate-float'
  },
  {
    id: 5,
    name: '–ú–∞—Å–ª–æ –ö–ª–æ—Å—Ç—Ä–∏–¥–∏—É–º',
    scientificName: 'Clostridium butyricum',
    age: '2.5 –º–ª–Ω –ª–µ—Ç',
    occupation: '–ú–∞—Å–ª—è–Ω—ã–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å',
    about: '–ì–ª—é–∫–æ–∑—É –¥–ª—è –º–∞—Å–ª—è–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–∏',
    hobby: '–°–æ–∑–¥–∞–≤–∞—Ç—å –º–∞—Å–ª—è–Ω—É—é –∫–∏—Å–ª–æ—Ç—É –∏ –≤–æ–¥–æ—Ä–æ–¥',
    hates: '–ö–∏—Å–ª–æ—Ä–æ–¥, –≤—ã—Å–æ–∫–∏–π pH',
    products: '–ú–∞—Å–ª—è–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞, CO‚ÇÇ, H‚ÇÇ',
    temperature: '35-40¬∞C',
    energy: '3 ATP —Å –º–æ–ª–µ–∫—É–ª—ã –≥–ª—é–∫–æ–∑—ã',
    status: '–°—Ç—Ä–æ–≥–æ –∞–Ω–∞—ç—Ä–æ–±–Ω—ã–π —Ä–µ–∂–∏–º! üßà',
    emoji: 'üßà',
    gradient: 'from-yellow-400 to-amber-600',
    animation: 'animate-pulse-glow'
  },
  {
    id: 6,
    name: '–ú–µ—Ç–∞ –ê—Ä—Ö–µ–∏',
    scientificName: 'Methanobacterium',
    age: '3.5 –º–ª—Ä–¥ –ª–µ—Ç',
    occupation: '–ì–∞–∑–æ–≤—ã–π –∏–Ω–∂–µ–Ω–µ—Ä',
    about: 'CO‚ÇÇ –∏ H‚ÇÇ –¥–ª—è –º–µ—Ç–∞–Ω–æ–≥–µ–Ω–µ–∑–∞',
    hobby: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –º–µ—Ç–∞–Ω –∏–∑ —É–≥–ª–µ–∫–∏—Å–ª–æ–≥–æ –≥–∞–∑–∞',
    hates: '–ö–∏—Å–ª–æ—Ä–æ–¥, –Ω–∏–∑–∫–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã',
    products: '–ú–µ—Ç–∞–Ω (CH‚ÇÑ)',
    temperature: '35-45¬∞C',
    energy: '1 ATP —Å –º–æ–ª–µ–∫—É–ª—ã CO‚ÇÇ',
    status: '–î—Ä–µ–≤–Ω–µ–π—à–∏–π –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ! üí®',
    emoji: 'üí®',
    gradient: 'from-green-400 to-emerald-600',
    animation: 'animate-float'
  }
];

const matches = [
  { pair: '–î—Ä–æ–∂–∂–∏ + –ì–ª—é–∫–æ–∑–∞', result: '–ò–¥–µ–∞–ª—å–Ω—ã–π —Å–∏–¥—Ä! üçé', success: true },
  { pair: '–õ–∞–∫—Ç–æ–±–∞–∫—Ç–µ—Ä–∏–∏ + –ú–æ–ª–æ–∫–æ', result: '–°–∞–º—ã–π –∫—Ä–µ–º–æ–≤—ã–π –π–æ–≥—É—Ä—Ç! ü•õ', success: true },
  { pair: '–ü—Ä–æ–ø–∏–æ–Ω–æ–≤—ã–µ + –õ–∞–∫—Ç–∞—Ç', result: '–°—ã—Ä —Å –∏–¥–µ–∞–ª—å–Ω—ã–º–∏ –¥—ã—Ä–∫–∞–º–∏! üßÄ', success: true },
  { pair: '–£–∫—Å—É—Å–Ω–æ–∫–∏—Å–ª—ã–µ + –≠—Ç–∞–Ω–æ–ª', result: '–ê—Ä–æ–º–∞—Ç–Ω—ã–π —É–∫—Å—É—Å! üç∂', success: true },
  { pair: '–ö–ª–æ—Å—Ç—Ä–∏–¥–∏–∏ + –ì–ª—é–∫–æ–∑–∞', result: '–ú–∞—Å–ª—è–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞ –∏ –≤–æ–¥–æ—Ä–æ–¥! üßà', success: true },
  { pair: '–ê—Ä—Ö–µ–∏ + CO‚ÇÇ + H‚ÇÇ', result: '–ë–∏–æ–º–µ—Ç–∞–Ω –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏! üí®', success: true },
  { pair: '–î—Ä–æ–∂–∂–∏ + –ö–∏—Å–ª–æ—Ä–æ–¥', result: '–û–∫–∏—Å–ª–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –±—Ä–æ–∂–µ–Ω–∏—è üòû', success: false },
  { pair: '–õ–∞–∫—Ç–æ–±–∞–∫—Ç–µ—Ä–∏–∏ + –ê–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏', result: '–£–Ω–∏—á—Ç–æ–∂–µ–Ω–∞ –∫–æ–ª–æ–Ω–∏—è üíÄ', success: false },
  { pair: '–ö–ª–æ—Å—Ç—Ä–∏–¥–∏–∏ + –ö–∏—Å–ª–æ—Ä–æ–¥', result: '–ì–∏–±–µ–ª—å –∫–æ–ª–æ–Ω–∏–∏ üíÄ', success: false }
];

const fermentationTypes = [
  {
    type: '–°–ø–∏—Ä—Ç–æ–≤–æ–µ',
    equation: '–ì–ª—é–∫–æ–∑–∞ ‚Üí 2 –≠—Ç–∞–Ω–æ–ª + 2 CO‚ÇÇ + 2 ATP',
    products: '–≠—Ç–∞–Ω–æ–ª, CO‚ÇÇ',
    microbes: '–î—Ä–æ–∂–∂–∏ (Saccharomyces)',
    temp: '25-30¬∞C',
    atp: '2 ATP',
    application: '–ê–ª–∫–æ–≥–æ–ª—å, —Ö–ª–µ–±–æ–ø–µ—á–µ–Ω–∏–µ',
    gradient: 'from-purple-500 to-pink-500'
  },
  {
    type: '–ú–æ–ª–æ—á–Ω–æ–∫–∏—Å–ª–æ–µ',
    equation: '–ì–ª—é–∫–æ–∑–∞ ‚Üí 2 –ú–æ–ª–æ—á–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞ + 2 ATP',
    products: '–ú–æ–ª–æ—á–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞',
    microbes: '–õ–∞–∫—Ç–æ–±–∞–∫—Ç–µ—Ä–∏–∏ (Lactobacillus)',
    temp: '37-40¬∞C',
    atp: '2 ATP',
    application: '–ô–æ–≥—É—Ä—Ç—ã, —Å—ã—Ä—ã, –∫–≤–∞—à–µ–Ω—ã–µ –æ–≤–æ—â–∏',
    gradient: 'from-blue-500 to-cyan-500'
  },
  {
    type: '–ü—Ä–æ–ø–∏–æ–Ω–æ–≤–æ–∫–∏—Å–ª–æ–µ',
    equation: '3 –õ–∞–∫—Ç–∞—Ç ‚Üí 2 –ü—Ä–æ–ø–∏–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞ + 1 –£–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞ + CO‚ÇÇ',
    products: '–ü—Ä–æ–ø–∏–æ–Ω–æ–≤–∞—è –∫–∏—Å–ª–æ—Ç–∞, —É–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞, CO‚ÇÇ',
    microbes: '–ü—Ä–æ–ø–∏–æ–Ω–æ–≤–æ–∫–∏—Å–ª—ã–µ –±–∞–∫—Ç–µ—Ä–∏–∏ (Propionibacterium)',
    temp: '30-37¬∞C',
    atp: '< 2 ATP',
    application: '–®–≤–µ–π—Ü–∞—Ä—Å–∫–∏–µ —Å—ã—Ä—ã',
    gradient: 'from-orange-500 to-yellow-500'
  },
  {
    type: '–£–∫—Å—É—Å–Ω–æ–∫–∏—Å–ª–æ–µ',
    equation: '–≠—Ç–∞–Ω–æ–ª + O‚ÇÇ ‚Üí –£–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞ + H‚ÇÇO',
    products: '–£–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞',
    microbes: '–£–∫—Å—É—Å–Ω–æ–∫–∏—Å–ª—ã–µ –±–∞–∫—Ç–µ—Ä–∏–∏ (Acetobacter)',
    temp: '25-30¬∞C',
    atp: '2 ATP',
    application: '–£–∫—Å—É—Å, –∫–æ–º–±—É—á–∞',
    gradient: 'from-pink-500 to-rose-500'
  },
  {
    type: '–ú–∞—Å–ª—è–Ω–æ–∫–∏—Å–ª–æ–µ',
    equation: '–ì–ª—é–∫–æ–∑–∞ ‚Üí –ú–∞—Å–ª—è–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞ + 2 CO‚ÇÇ + 2 H‚ÇÇ + 3 ATP',
    products: '–ú–∞—Å–ª—è–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞, CO‚ÇÇ, H‚ÇÇ',
    microbes: '–ú–∞—Å–ª—è–Ω–æ–∫–∏—Å–ª—ã–µ –±–∞–∫—Ç–µ—Ä–∏–∏ (Clostridium)',
    temp: '35-40¬∞C',
    atp: '3 ATP',
    application: '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –º–∞—Å–ª—è–Ω–æ–π –∫–∏—Å–ª–æ—Ç—ã',
    gradient: 'from-yellow-500 to-amber-500'
  },
  {
    type: '–ú–µ—Ç–∞–Ω–æ–≤–æ–µ',
    equation: 'CO‚ÇÇ + 4 H‚ÇÇ ‚Üí CH‚ÇÑ + 2 H‚ÇÇO',
    products: '–ú–µ—Ç–∞–Ω (CH‚ÇÑ)',
    microbes: '–ú–µ—Ç–∞–Ω–æ–≥–µ–Ω–Ω—ã–µ –∞—Ä—Ö–µ–∏ (Methanobacterium)',
    temp: '35-45¬∞C',
    atp: '1 ATP',
    application: '–ë–∏–æ–≥–∞–∑, –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–æ—á–Ω—ã—Ö –≤–æ–¥',
    gradient: 'from-green-500 to-emerald-500'
  },
  {
    type: '–ì–æ–º–æ–∞—Ü–µ—Ç–∞—Ç–Ω–æ–µ',
    equation: '–ì–ª—é–∫–æ–∑–∞ ‚Üí 3 –£–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞',
    products: '–£–∫—Å—É—Å–Ω–∞—è –∫–∏—Å–ª–æ—Ç–∞',
    microbes: '–ì–æ–º–æ–∞—Ü–µ—Ç–∞—Ç–Ω—ã–µ –±–∞–∫—Ç–µ—Ä–∏–∏ (Clostridium aceticum)',
    temp: '30-37¬∞C',
    atp: '3 ATP',
    application: '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –∞—Ü–µ—Ç–∞—Ç–∞',
    gradient: 'from-indigo-500 to-purple-500'
  }
];

export default function Index() {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [swipedRight, setSwipedRight] = useState<number[]>([]);
  const [swipedLeft, setSwipedLeft] = useState<number[]>([]);
  const [showSwipeAnimation, setShowSwipeAnimation] = useState<'left' | 'right' | null>(null);
  const { playSwipeSound, playBubbleSound } = useSoundEffects();

  const currentMicrobe = microbes[currentIndex];

  useEffect(() => {
    const interval = setInterval(() => {
      if (Math.random() > 0.7) {
        playBubbleSound();
      }
    }, 2000);

    return () => clearInterval(interval);
  }, [playBubbleSound]);

  const handleSwipe = (direction: 'left' | 'right') => {
    playSwipeSound(direction);
    setShowSwipeAnimation(direction);
    
    setTimeout(() => {
      if (direction === 'right') {
        setSwipedRight([...swipedRight, currentMicrobe.id]);
      } else {
        setSwipedLeft([...swipedLeft, currentMicrobe.id]);
      }
      
      if (currentIndex < microbes.length - 1) {
        setCurrentIndex(currentIndex + 1);
      } else {
        setCurrentIndex(0);
      }
      setShowSwipeAnimation(null);
    }, 300);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#1A1F2C] via-[#221F26] to-[#1A1F2C] text-white relative">
      <BubbleAnimation />
      <div className="container mx-auto px-4 py-8 max-w-6xl relative z-10">
        <header className="text-center mb-12 animate-float">
          <h1 className="text-6xl font-bold mb-4 glow-strong text-primary">
            MICROBE MATCH
          </h1>
          <p className="text-xl text-muted-foreground">
            –ù–∞–π–¥–∏ —Å–≤–æ—é –∏–¥–µ–∞–ª—å–Ω—É—é —Ö–∏–º–∏—á–µ—Å–∫—É—é –ø–∞—Ä—É! üß™
          </p>
        </header>

        <Tabs defaultValue="swipe" className="w-full">
          <TabsList className="grid w-full grid-cols-4 mb-8 bg-card/50 backdrop-blur">
            <TabsTrigger value="swipe" className="data-[state=active]:bg-primary">
              <Icon name="Heart" className="mr-2" size={16} />
              –°–≤–∞–π–ø—ã
            </TabsTrigger>
            <TabsTrigger value="matches" className="data-[state=active]:bg-primary">
              <Icon name="Sparkles" className="mr-2" size={16} />
              –ú—ç—Ç—á–∏
            </TabsTrigger>
            <TabsTrigger value="comparison" className="data-[state=active]:bg-primary">
              <Icon name="BarChart3" className="mr-2" size={16} />
              –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
            </TabsTrigger>
            <TabsTrigger value="stats" className="data-[state=active]:bg-primary">
              <Icon name="TrendingUp" className="mr-2" size={16} />
              –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            </TabsTrigger>
          </TabsList>

          <TabsContent value="swipe" className="space-y-6">
            <div className="flex justify-center items-center min-h-[600px]">
              {currentMicrobe && (
                <Card 
                  className={`w-full max-w-md bg-card/80 backdrop-blur border-2 border-primary/30 overflow-hidden relative ${
                    showSwipeAnimation === 'right' ? 'animate-slide-in' : 
                    showSwipeAnimation === 'left' ? 'animate-slide-out' : ''
                  }`}
                >
                  <div className={`absolute top-0 left-0 right-0 h-2 ${currentMicrobe.gradient}`} />
                  
                  <div className="p-8">
                    <div className="text-center mb-6">
                      <div className={`text-8xl mb-4 ${currentMicrobe.animation}`}>
                        {currentMicrobe.emoji}
                      </div>
                      <h2 className="text-3xl font-bold mb-2">{currentMicrobe.name}</h2>
                      <p className="text-muted-foreground italic">{currentMicrobe.scientificName}</p>
                    </div>

                    <div className="space-y-4 mb-6">
                      <div className="flex items-center gap-2">
                        <Icon name="Calendar" className="text-primary" size={20} />
                        <span className="text-sm"><strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> {currentMicrobe.age}</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <Icon name="Briefcase" className="text-primary" size={20} />
                        <span className="text-sm"><strong>–†–æ–¥ –∑–∞–Ω—è—Ç–∏–π:</strong> {currentMicrobe.occupation}</span>
                      </div>
                    </div>

                    <div className="space-y-3 mb-6 bg-muted/20 p-4 rounded-lg">
                      <div className="flex items-start gap-2">
                        <Icon name="Target" className="text-secondary mt-1" size={18} />
                        <div>
                          <strong className="text-secondary">–ò—â—É:</strong>
                          <p className="text-sm">{currentMicrobe.about}</p>
                        </div>
                      </div>
                      <div className="flex items-start gap-2">
                        <Icon name="Heart" className="text-accent mt-1" size={18} />
                        <div>
                          <strong className="text-accent">–ú–æ–∏ —Ö–æ–±–±–∏:</strong>
                          <p className="text-sm">{currentMicrobe.hobby}</p>
                        </div>
                      </div>
                      <div className="flex items-start gap-2">
                        <Icon name="X" className="text-destructive mt-1" size={18} />
                        <div>
                          <strong className="text-destructive">–ù–µ –≤—ã–Ω–æ—à—É:</strong>
                          <p className="text-sm">{currentMicrobe.hates}</p>
                        </div>
                      </div>
                    </div>

                    <div className="space-y-2 mb-6">
                      <Badge variant="outline" className="w-full justify-start">
                        <Icon name="Flask" className="mr-2" size={14} />
                        –ü—Ä–æ–¥—É–∫—Ç—ã: {currentMicrobe.products}
                      </Badge>
                      <Badge variant="outline" className="w-full justify-start">
                        <Icon name="Thermometer" className="mr-2" size={14} />
                        –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {currentMicrobe.temperature}
                      </Badge>
                      <Badge variant="outline" className="w-full justify-start">
                        <Icon name="Zap" className="mr-2" size={14} />
                        –≠–Ω–µ—Ä–≥–∏—è: {currentMicrobe.energy}
                      </Badge>
                    </div>

                    <div className="text-center text-lg font-semibold mb-6 text-primary">
                      {currentMicrobe.status}
                    </div>

                    <div className="flex gap-4">
                      <Button
                        onClick={() => handleSwipe('left')}
                        variant="outline"
                        className="flex-1 border-destructive text-destructive hover:bg-destructive hover:text-white"
                        size="lg"
                      >
                        <Icon name="X" className="mr-2" size={20} />
                        –ù–µ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã
                      </Button>
                      <Button
                        onClick={() => handleSwipe('right')}
                        className="flex-1 bg-gradient-to-r from-primary to-secondary hover:opacity-90"
                        size="lg"
                      >
                        <Icon name="Heart" className="mr-2" size={20} />
                        –ü–æ–¥—Ö–æ–¥–∏—Ç
                      </Button>
                    </div>
                  </div>
                </Card>
              )}
            </div>
          </TabsContent>

          <TabsContent value="matches" className="space-y-4">
            <h2 className="text-3xl font-bold mb-6 text-center glow">
              –•–∏–º–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä—ã üíò
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {matches.map((match, index) => (
                <Card
                  key={index}
                  className={`p-6 ${
                    match.success 
                      ? 'bg-green-950/30 border-green-500/30' 
                      : 'bg-red-950/30 border-red-500/30'
                  } backdrop-blur`}
                >
                  <div className="flex items-start gap-4">
                    <div className="text-4xl">
                      {match.success ? '‚úÖ' : '‚ùå'}
                    </div>
                    <div className="flex-1">
                      <h3 className="font-bold text-lg mb-2">{match.pair}</h3>
                      <p className="text-muted-foreground">{match.result}</p>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="comparison" className="space-y-6">
            <h2 className="text-3xl font-bold mb-6 text-center glow">
              –¢–∏–ø—ã –±—Ä–æ–∂–µ–Ω–∏—è üß™
            </h2>
            <div className="grid grid-cols-1 gap-6">
              {fermentationTypes.map((fermentation, index) => (
                <Card
                  key={index}
                  className="p-6 bg-card/80 backdrop-blur border-2 border-primary/20 overflow-hidden relative"
                >
                  <div className={`absolute top-0 left-0 right-0 h-1 bg-gradient-to-r ${fermentation.gradient}`} />
                  
                  <div className="space-y-4">
                    <h3 className="text-2xl font-bold text-primary">{fermentation.type} –±—Ä–æ–∂–µ–Ω–∏–µ</h3>
                    
                    <div className="bg-muted/20 p-4 rounded-lg font-mono text-sm">
                      {fermentation.equation}
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <p className="text-sm text-muted-foreground mb-1">–ü—Ä–æ–¥—É–∫—Ç—ã:</p>
                        <p className="font-semibold">{fermentation.products}</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground mb-1">–ú–∏–∫—Ä–æ–æ—Ä–≥–∞–Ω–∏–∑–º—ã:</p>
                        <p className="font-semibold">{fermentation.microbes}</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground mb-1">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</p>
                        <p className="font-semibold">{fermentation.temp}</p>
                      </div>
                      <div>
                        <p className="text-sm text-muted-foreground mb-1">–í—ã—Ö–æ–¥ ATP:</p>
                        <p className="font-semibold">{fermentation.atp}</p>
                      </div>
                    </div>

                    <div>
                      <p className="text-sm text-muted-foreground mb-1">–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:</p>
                      <p className="text-secondary font-semibold">{fermentation.application}</p>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="stats" className="space-y-6">
            <h2 className="text-3xl font-bold mb-6 text-center glow">
              –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <Card className="p-6 bg-gradient-to-br from-primary/20 to-secondary/20 backdrop-blur border-primary/30">
                <div className="text-center">
                  <Icon name="Heart" className="mx-auto mb-4 text-primary" size={48} />
                  <div className="text-4xl font-bold mb-2">{swipedRight.length}</div>
                  <p className="text-muted-foreground">–°–≤–∞–π–ø–æ–≤ –≤–ø—Ä–∞–≤–æ</p>
                </div>
              </Card>

              <Card className="p-6 bg-gradient-to-br from-destructive/20 to-red-500/20 backdrop-blur border-destructive/30">
                <div className="text-center">
                  <Icon name="X" className="mx-auto mb-4 text-destructive" size={48} />
                  <div className="text-4xl font-bold mb-2">{swipedLeft.length}</div>
                  <p className="text-muted-foreground">–°–≤–∞–π–ø–æ–≤ –≤–ª–µ–≤–æ</p>
                </div>
              </Card>

              <Card className="p-6 bg-gradient-to-br from-accent/20 to-pink-500/20 backdrop-blur border-accent/30">
                <div className="text-center">
                  <Icon name="Sparkles" className="mx-auto mb-4 text-accent" size={48} />
                  <div className="text-4xl font-bold mb-2">
                    {Math.round((swipedRight.length / (swipedRight.length + swipedLeft.length) * 100) || 0)}%
                  </div>
                  <p className="text-muted-foreground">–ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏</p>
                </div>
              </Card>
            </div>

            <Card className="p-6 bg-card/80 backdrop-blur">
              <h3 className="text-xl font-bold mb-4 text-primary">–£—Ä–æ–≤–µ–Ω—å —ç–∫—Å–ø–µ—Ä—Ç–∞</h3>
              <div className="space-y-2">
                <div className="flex justify-between text-sm">
                  <span>–ü—Ä–æ–≥—Ä–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è</span>
                  <span className="font-bold">{Math.min(currentIndex + 1, microbes.length)}/{microbes.length}</span>
                </div>
                <div className="w-full bg-muted/30 rounded-full h-3">
                  <div 
                    className="bg-gradient-to-r from-primary to-secondary h-3 rounded-full transition-all duration-500 glow"
                    style={{ width: `${((currentIndex + 1) / microbes.length) * 100}%` }}
                  />
                </div>
              </div>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}